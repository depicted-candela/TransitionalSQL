        -- Part 2: Data Redaction & Column-Level Auditing 🎭🕵️


--  (i) Meanings, Values, Relations, and Advantages

--      Problem 2.1: Implement Data Redaction and Column-Level Auditing
-- Protect the sensitive data accessed by the analystUser while auditing access to critical notes.
-- Step A (As securityAdmin): Create a Data Redaction policy on the guardians.SensitiveData table. The policy must apply only to analystUser and should:
-- Partially redact the socialSecurityNumber column to show only the last four digits (e.g., 'XXX-XX-6789').
-- Completely redact the salary column, showing only the number 0.

-- ===================================================================================
-- Problem 2.1 Solution: Data Redaction and Column-Level Auditing
-- This script assumes the corrected setup script has been run successfully.
-- ===================================================================================

-- Connect as the security administrator to perform all setup
CONNECT securityAdmin/PwdForSecAdmin_04;

-- Set up robust cleanup to make the script re-runnable
BEGIN
    DBMS_REDACT.DROP_POLICY(
        object_schema => 'GUARDIANS', object_name   => 'SENSITIVEDATA',
        policy_name   => 'SENSITIVE_DATA_REDACTION_POLICY'
    );
EXCEPTION WHEN OTHERS THEN IF SQLCODE = -28102 THEN NULL; ELSE RAISE; END IF;
END;
/
BEGIN EXECUTE IMMEDIATE 'NOAUDIT POLICY salary_access_audit';
EXCEPTION WHEN OTHERS THEN IF SQLCODE = -46357 THEN NULL; ELSE RAISE; END IF;
END;
/
BEGIN EXECUTE IMMEDIATE 'DROP AUDIT POLICY salary_access_audit';
EXCEPTION WHEN OTHERS THEN IF SQLCODE = -46357 THEN NULL; ELSE RAISE; END IF;
END;
/

-- Step A (As securityAdmin): Create a Data Redaction policy on the guardians.SensitiveData table.
PROMPT *** Step A: Creating Data Redaction policy as securityAdmin...

BEGIN
    -- Add the policy and define redaction for the socialSecurityNumber column
    DBMS_REDACT.ADD_POLICY(
        object_schema         => 'GUARDIANS',
        object_name           => 'SENSITIVEDATA',
        policy_name           => 'SENSITIVE_DATA_REDACTION_POLICY',
        expression            => 'SYS_CONTEXT(''USERENV'', ''SESSION_USER'') = ''ANALYSTUSER''',
        column_name           => 'socialSecurityNumber',
        function_type         => DBMS_REDACT.PARTIAL,
        function_parameters   => 'VVVFVVFVVVV,VVV|VV|VVVV,*,1,5'
    );
    -- Alter the policy to add redaction for the salary column
    DBMS_REDACT.ALTER_POLICY(
        object_schema         => 'GUARDIANS',
        object_name           => 'SENSITIVEDATA',
        policy_name           => 'SENSITIVE_DATA_REDACTION_POLICY',
        action                => DBMS_REDACT.ADD_COLUMN,
        column_name           => 'salary',
        function_type         => DBMS_REDACT.FULL
    );
END;
/

-- Step B (As securityAdmin): Create a Unified Audit Policy named salary_access_audit.
PROMPT *** Step B: Creating and enabling Unified Audit policy as securityAdmin...

CREATE AUDIT POLICY salary_access_audit
  ACTIONS SELECT(salary) ON guardians.SensitiveData;

AUDIT POLICY salary_access_audit;


-- Step C (As analystUser): Query the SensitiveData table to see the redacted data.
PROMPT *** Step C: Querying as analystUser to view redacted data...
CONNECT analystUser/PwdForAnalyst_02;

SET LINESIZE 150
COL AGENTNAME FORMAT A20
COL SOCIALSECURITYNUMBER FORMAT A20
COL MISSIONNOTES FORMAT A40

SELECT * FROM guardians.SensitiveData;


-- Step D (As securityAdmin): Query the audit trail to see the record generated by the analyst's query.
PROMPT *** Step D: Querying the audit trail as securityAdmin...
CONNECT securityAdmin/PwdForSecAdmin_04;

-- The manual flush command is commented out as it is not available in this
-- specific database environment and is not required for the audit record to appear.
-- EXEC DBMS_AUDIT_MGMT.FLUSH_UNIFIED_AUDIT_TRAIL;

-- Query the audit trail, filtering for the specific policy and user.
SELECT
    dbusername,
    action_name,
    sql_text,
    unified_audit_policies,
    TO_CHAR(event_timestamp, 'YYYY-MM-DD HH24:MI:SS') AS audit_time
FROM
    unified_audit_trail
WHERE
    unified_audit_policies = 'SALARY_ACCESS_AUDIT'
    AND dbusername = 'ANALYSTUSER'
ORDER BY
    event_timestamp DESC
FETCH FIRST 1 ROWS ONLY;