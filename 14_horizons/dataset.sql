-- DDL and DML for the 'horizons' user schema with enriched, meaningful data.
-- This script is idempotent and can be run multiple times.
SET DEFINE OFF;
SET SERVEROUTPUT ON;

-- Recreate the user for a clean slate
BEGIN
    EXECUTE IMMEDIATE 'DROP USER HORIZONS CASCADE';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1918 THEN
            RAISE;
        END IF;
END;
/

CREATE USER HORIZONS IDENTIFIED BY YourPassword;

-- Grant essential roles and privileges
GRANT CONNECT, RESOURCE, AQ_ADMINISTRATOR_ROLE TO horizons;
ALTER USER HORIZONS QUOTA UNLIMITED ON USERS;
GRANT CREATE TYPE, CREATE TABLE, CREATE SEQUENCE, CREATE PROCEDURE TO horizons;
GRANT EXECUTE ON DBMS_AQADM TO horizons;
GRANT EXECUTE ON DBMS_AQ TO horizons;

--------------------------------------------------------------------------------
-- SCHEMA DEFINITION (Tables, Types, Queues)
--------------------------------------------------------------------------------

-- TYPES
CREATE OR REPLACE TYPE horizons.PartRequestType AS OBJECT (
    orderId         NUMBER(10),
    partId          NUMBER(10),
    quantity        NUMBER(5),
    requestTimestamp TIMESTAMP WITH TIME ZONE
);
/

-- TABLE DEFINITIONS
CREATE TABLE horizons.productCatalog (
    partId          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    partName        VARCHAR2(100) NOT NULL,
    parentPartId    NUMBER REFERENCES horizons.productCatalog(partId),
    isReservable    BOOLEAN DEFAULT TRUE NOT NULL
) ANNOTATIONS (DisplayName 'Master Product Hierarchy', Version '1.2');
COMMENT ON TABLE horizons.productCatalog IS 'Hierarchical bill of materials for all products.';

CREATE TABLE horizons.customerOrders (
    orderId         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    orderDate       DATE DEFAULT SYSDATE,
    -- THE FIX: Ensure customer names are unique to prevent ORA-01427 errors.
    customerName    VARCHAR2(100) UNIQUE NOT NULL, 
    orderStatus     VARCHAR2(20) DEFAULT 'PENDING'
);

CREATE TABLE horizons.orderDetails (
    orderId         NUMBER PRIMARY KEY REFERENCES horizons.customerOrders(orderId),
    detailXML       XMLTYPE
);

CREATE TABLE horizons.inventory (
    partId           NUMBER(10) PRIMARY KEY,
    onHandQuantity   NUMBER(10) DEFAULT 0,
    reservedQuantity NUMBER(10) DEFAULT 0,
    CONSTRAINT fk_inventory_part FOREIGN KEY (partId) REFERENCES horizons.productCatalog(partId)
);

-- ADVANCED QUEUING (AQ) SETUP
BEGIN
    DBMS_AQADM.CREATE_QUEUE_TABLE(
        queue_table        => 'horizons.partRequestQueueTable',
        queue_payload_type => 'horizons.PartRequestType',
        multiple_consumers => TRUE
    );
    DBMS_AQADM.CREATE_QUEUE(
        queue_name  => 'horizons.partRequestTopic',
        queue_table => 'horizons.partRequestQueueTable'
    );
    DBMS_AQADM.START_QUEUE(queue_name => 'horizons.partRequestTopic');
END;
/

--------------------------------------------------------------------------------
-- DATA POPULATION (Enriched for Meaningful Testing)
--------------------------------------------------------------------------------

INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Gaming PC', NULL);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Motherboard Assembly', 1);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Ryzen 9 CPU', 2);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('RAM 32GB Kit (2x16GB)', 2);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('GeForce RTX GPU', 1);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('M.2 NVMe SSD 2TB', 2);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Chassis Assembly', 1);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Mid-Tower PC Case', 7);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('PSU 750W Gold', 7);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Cooling System', 1);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('AIO Liquid Cooler 240mm', 10);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Case Fans (3-pack)', 10);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Workstation PC', NULL);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Threadripper CPU', 13);
INSERT INTO horizons.productCatalog (partName, parentPartId) VALUES ('Quadro RTX GPU', 13);

INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (3, 50);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (4, 100);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (5, 30);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (6, 80);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (8, 60);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (9, 75);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (11, 40);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (12, 200);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (14, 20);
INSERT INTO horizons.inventory (partId, onHandQuantity) VALUES (15, 15);

INSERT INTO horizons.customerOrders (customerName) VALUES ('Alice');
INSERT INTO horizons.customerOrders (customerName) VALUES ('Bob');
INSERT INTO horizons.customerOrders (customerName) VALUES ('Charlie');
INSERT INTO horizons.customerOrders (customerName) VALUES ('Diana');
INSERT INTO horizons.customerOrders (customerName) VALUES ('Eve');
INSERT INTO horizons.customerOrders (customerName, orderStatus) VALUES ('Frank', 'COMPLETED');

COMMIT;

INSERT INTO horizons.orderDetails (orderId, detailXML) VALUES (
  (SELECT orderId FROM HORIZONS.CUSTOMERORDERS WHERE customerName = 'Alice'),
  XMLTYPE('<order anbr="ORD201"><items><item partNumber="3" quantity="1"/><item partNumber="4" quantity="2"/></items></order>')
);
INSERT INTO horizons.orderDetails (orderId, detailXML) VALUES (
  (SELECT orderId FROM HORIZONS.CUSTOMERORDERS WHERE customerName = 'Bob'),
  XMLTYPE('<order anbr="ORD202"><items><item partNumber="5" quantity="1"/></items></order>')
);
INSERT INTO horizons.orderDetails (orderId, detailXML) VALUES (
  (SELECT orderId FROM HORIZONS.CUSTOMERORDERS WHERE customerName = 'Charlie'),
  XMLTYPE('<order anbr="ORD203"><items><item partNumber="1" quantity="1"/></items></order>')
);
INSERT INTO horizons.orderDetails (orderId, detailXML) VALUES (
  (SELECT orderId FROM HORIZONS.CUSTOMERORDERS WHERE customerName = 'Diana'),
  XMLTYPE('<order anbr="ORD204"><items><item partNumber="13" quantity="2"/></items></order>')
);
INSERT INTO horizons.orderDetails (orderId, detailXML) VALUES (
  (SELECT orderId FROM HORIZONS.CUSTOMERORDERS WHERE customerName = 'Eve'),
  XMLTYPE('<order anbr="ORD205"><items><item partNumber="9" quantity="1"/><item partNumber="12" quantity="3"/></items></order>')
);

COMMIT;

--------------------------------------------------------------------------------
-- FINAL GRANTS
--------------------------------------------------------------------------------
GRANT EXECUTE ON horizons.PartRequestType TO PUBLIC;
BEGIN
    DBMS_AQADM.GRANT_QUEUE_PRIVILEGE('ENQUEUE', 'horizons.partRequestTopic', 'PUBLIC');
    DBMS_AQADM.GRANT_QUEUE_PRIVILEGE('DEQUEUE', 'horizons.partRequestTopic', 'PUBLIC');
END;
/
BEGIN
    DBMS_OUTPUT.PUT_LINE('Schema HORIZONS created and populated successfully.');
END;